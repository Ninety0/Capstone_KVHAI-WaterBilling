@using System.Security.Claims;

<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <title>@ViewBag.Title</title>
    <!-- BOOTSTRAP -->
    <link rel="stylesheet" href="~/lib/bootstrap/css/bootstrap.min.css" />

    <!-- OTHER LIBRARY -->
    <link href="/css/toastr.min.css" rel="stylesheet" />
    <link href="/lib/editable-select/jquery-editable-select.css" rel="stylesheet" />
    <link href="/lib/font-awesome/all.min.css" rel="stylesheet" />
    <link href="/lib/font-awesome/fontawesome.min.css" rel="stylesheet" />
    <link href="/css/notification.css" rel="stylesheet" />
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/toastr.min.js" asp-append-version="true" defer></script>

    <!-- ORIGINAL -->
    <link href="/css/header-font.css" rel="stylesheet" />
    <link rel="stylesheet" href="/css/dashboardLayout.css" />
    <link rel="stylesheet" href="/css/resident_nav.css" />

    @*<link href="~/css/main-site.min.css" rel="stylesheet" />*@
    @RenderSection("head", required: false)
    <style>
        .content-container {
            background-color: #f8fafc;
            box-shadow: 0 0 5px 5px rgba(0,0,0,.25);
            border-radius: 6px;
        }

        .header-border {
            border: 1px solid #1f2937;
            /*width: calc(100% - 20px);*/
        }

        .content-header {
            display: flex;
            justify-content: center;
            text-transform: uppercase;
            font-family: "Poetsen One", sans-serif;
            font-weight: 400;
            font-style: normal;
            font-size: 1.8rem;
            color: #18181b;
        }

        span.title {
            font-weight: 400;
            text-transform: uppercase;
            color: #6b7280;
            font-size: 20px;
        }

        .notification_body {
            top: 40px;
        }

        .card_url {
            cursor: pointer;
        }
    </style>
</head>

<body>
    <div class="wrapper d-flex">
        <!-- SIDEBAR LEFT-->
        <div class="d-none d-lg-block sidebar">
            <div class="container-fluid mt-2 d-flex flex-column align-items-center">
                <img src="/img/kvhai.png" class="kvhai-img me-2" alt="Alternate Text" />
                <span id="header" class="">KVHAI</span>
            </div>
            <div class="container-fluid mt-5 d-flex flex-column p-0">
                @RenderSection("sidebar", required: false)
            </div>
        </div>

        <!--MAIN CONTENT RIGHT-->
        <div class="container-fluid center-form">

            <!-- HEADER -->
            <div class="d-none  d-lg-flex justify-content-end header-top">
                <div class="flex-grow-1  align-content-center">
                    <div class="container  ms-3">
                        <span>
                            <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24">
                                <g fill="none" stroke="#6b7280" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5">
                                    <path d="m14.68 20.5l5.21-5.21a1.212 1.212 0 0 0 0-1.724l-5.21-5.209" />
                                    <path d="M3.751 3.5v7.286a3.643 3.643 0 0 0 3.643 3.643h12.847" />
                                </g>
                            </svg>
                        </span>
                        <span class="title">@ViewBag.Title</span>
                    </div>
                </div>
                <div class="d-flex align-items-center p-2 notification_container d-flex">
                    <i class="" id="btn_notification">
                        <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24">
                            <path fill="currentColor" d="M14.235 19c.865 0 1.322 1.024.745 1.668A4 4 0 0 1 12 22a4 4 0 0 1-2.98-1.332c-.552-.616-.158-1.579.634-1.661l.11-.006zM12 2c1.358 0 2.506.903 2.875 2.141l.046.171l.008.043a8.01 8.01 0 0 1 4.024 6.069l.028.287L19 11v2.931l.021.136a3 3 0 0 0 1.143 1.847l.167.117l.162.099c.86.487.56 1.766-.377 1.864L20 18H4c-1.028 0-1.387-1.364-.493-1.87a3 3 0 0 0 1.472-2.063L5 13.924l.001-2.97A8 8 0 0 1 8.822 4.5l.248-.146l.01-.043a3 3 0 0 1 2.562-2.29l.182-.017z" />
                        </svg>
                    </i>
                    <span class="notification_count">
                        @if (Model.NotificationResident != null && Model.NotificationResident.Count > 0)
                        {
                            var text = Model.NotificationResident.Count;
                            @text
                        }
                        else
                        {
                            var text = 0;
                            @text
                        }
                    </span>
                    <div class="notification_body">
                        @if (Model.NotificationResident != null && Model.NotificationResident.Count > 0)
                        {
                            <div class="card text-center notification-card">
                                <div class="card-header">
                                    <h6 class="card-title">Notification</h6>
                                </div>
                                @foreach (var item in Model.NotificationResident)
                                {
                                    <div class="card-body" id="notification_content" data-notif="@item.Notification_ID">
                                        <a class="text-decoration-none" id="notification_url" data-url="@item.Url">
                                            <div class="row">
                                                <div class="col-12 d-flex justify-content-between align-items-start notification-content">
                                                    <div>
                                                        <p class="fw-bold notification-title">@item.Title</p>
                                                        <p class="notification-message">@item.Message</p>
                                                    </div>
                                                    @*<small class="notification-date">@item.Created_At</small>*@
                                                    <small class="notification-date">@item.Hours</small>
                                                </div>
                                            </div>
                                        </a>
                                    </div>
                                }
                            </div>

                        }
                        else
                        {
                            <div class="card text-center notification-card">
                                <div class="card-header">
                                    <h6 class="card-title">Notification</h6>
                                </div>
                                <div class="card-body" id="notification_content">
                                    <div class="row">
                                        <div class="col-12 d-flex justify-content-between align-items-start notification-content">
                                            <div>
                                                <p class="notification-message text-center">No new notification!</p>
                                            </div>
                                            @*<small class="notification-date">@item.Created_At</small>*@
                                            <small class="notification-date"></small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="stick"></div>
                <div class=" d-flex align-items-center p-2">
                    @if (User.Identity.IsAuthenticated)
                    {
                        var residentID = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
                        var username = User.Identity.Name;
                        <span class="fw-bold">Hi, @username!</span> <!-- Display the username -->
                        <!-- You can also hide the ID or use it for some internal purposes -->
                        <input type="hidden" id="cookie_id" value="@residentID" />
                        <input type="hidden" id="cookie_name" value="@username" />
                    }
                    else
                    {
                        <p>Please log in.</p>
                    }
                    <div class="dropdown">
                        <button class="dropdown-toggle caret-down" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" id="btn_logout">Logout</a></li>
                        </ul>
                    </div>
                </div>
            </div>

            <div class="container-fluid">
                <hr class="border border-1 m-0" style="color: #94a3b8;" />
            </div>

            <!-- MOBILE NAV -->
            <div class="mobile-nav">
                <nav class="navbar navbar-expand-lg d-lg-none">
                    <div class="p-0 container-fluid">
                        <div class="d-flex align-items-center ms-3">
                            <img src="/img/kvhai.png" class="kvhai-img me-2" alt="Alternate Text" />
                            <a class="navbar-brand" href="#" id="header">KVHAI</a>
                        </div>
                        <button class="hamburger me-3" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                            <span class="hamburger-line"></span>
                        </button>
                        <div class="collapse navbar-collapse mt-5" id="navbarNav">
                            <div class="d-flex flex-column">
                                @RenderSection("mobilenav", required: false)
                            </div>
                        </div>
                    </div>
                </nav>

            </div>

            <!-- BODY CONTENT -->
            <div class="container-fluid p-3 content-wrapper">
                @RenderBody()
            </div>
        </div>
    </div>
    <script src="~/lib/bootstrap/js/bootstrap.bundle.min.js" defer></script>
    @*<script src="~/js/site.js" asp-append-version="true" defer></script>*@
    <script src="~/lib/just-select/justselect.js" defer></script>
    <script src="~/lib/editable-select/jquery-editable-select.js"></script>
    <script src="~/js/notification.js"></script>

    @await RenderSectionAsync("Scripts", required: false)

    <script src="~/js/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/js/signalrSetupConnection.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const toggleBtn = document.querySelector('#toggle-menu');
            const topNavbar = document.querySelector('#top-navbar');

            if (toggleBtn && topNavbar) {
                toggleBtn.addEventListener('click', function () {
                    topNavbar.classList.toggle('show');
                });
            }
        });

        $(document).ready(function () {
            const notificationConnection = setupSignalRConnection("/resident/notification", "Notification Hub");

            notificationConnection.on("OnConnected", function () {
                onConnected();
            });

            function onConnected() {
                var res_id = $('#cookie_id').val();
                var username = $('#cookie_name').val();
                notificationConnection.invoke("SaveUserConnection", res_id, username).catch(function (err) {
                    return console.error(err.toString());
                });
            }

            // Add a handler for server shutdown if needed
            notificationConnection.on("ServerShuttingDown", function () {
                toastr.warning("The server is shutting down. You may experience a brief disconnection.");
            });

            notificationConnection.on("ReceivedNotification", function (message) {
                toastr.success("You have new notification!");

            });

            notificationConnection.on("ReceivedPersonalNotification", function (message, resident_id) {
                //toastr.success(message + " - " + resident_id);
                toastr.success("You have new notification!");
                GetNotificationResident();
            });

            $(document).on('click', '#notification_url', function () {
                var _notif_id = $('#notification_url').parent().data('notif');
                $.ajax({
                    type: "POST",
                    url: "/LoggedIn/UpdateNotificationRead",
                    data: { notification_id: _notif_id },
                    success: function () {
                        var currentUrl = window.location.pathname;
                        url = $('#notification_url').data('url');
                        if (currentUrl === url) {
                            GetNotificationResident();
                        }
                        else {
                            window.location.href = url;
                        }
                    }, error: function (xhr) {
                        toastr.error(xhr.responseText);
                    }
                });
                
            })

            function GetNotificationResident() {
                var res_id = $('#cookie_id').val();
                $.ajax({
                    type: "GET",
                    url: "/LoggedIn/GetNewNotification",
                    data: { resident_id: res_id },
                    success: function (response) {
                        //console.log(response);
                        var result = $(response).find('.notification_container').html();
                        //var result = $(response).find('.notification_body').html();
                        $('.notification_container').html(result);
                    },
                    error: function (xhr) {
                        toastr.error(xhr.responseText);
                    }
                });
            }


            $(document).on('click', '#btn_logout', function () {
                $.ajax({
                    type: "POST",
                    url: "/LoggedIn/Logout",
                    success: function (response) {
                        toastr.info(response);
                        console.log(response);
                        setTimeout(function () {
                            window.location.href = '/kvhai/resident/login';
                        }, 3000);
                    }, error: function (xhr) {
                        toastr.error(xhr.responseText);
                    }
                });
            });
        });
    </script>
</body>
</html>