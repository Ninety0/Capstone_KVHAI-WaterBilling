@using System.Security.Claims;

<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <title>@ViewBag.Title</title>
    @*<link href="/css/header-font.css" rel="stylesheet" />*@
    <link rel="stylesheet" href="/css/adminLayout.css" />
    <link href="/css/toastr.min.css" rel="stylesheet" />
    <link href="/lib/editable-select/jquery-editable-select.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/lib/bootstrap/css/bootstrap.min.css" />
    <link href="/lib/font-awesome/all.min.css" rel="stylesheet" />
    <link href="/lib/font-awesome/fontawesome.min.css" rel="stylesheet" />
    <link href="/css/notification.css" rel="stylesheet" />

    @RenderSection("head", required: false)
<style>
    .stick {
        border-left: 2px solid #E3E7E9;
        height:40px;
    }
    #btn_logout{
        cursor:pointer;
        color:black;
    }
</style>
</head>
<body class="overflow-hidden">
    <div class="wrapper d-flex">
        <!-- SIDEBAR LEFT -->
        <div class="d-none d-lg-block sidebar bg-dark text-white vh-100">
            <div class="container-fluid mt-4 text-center">
                <img src="/img/kvhai.png" class="kvhai-img rounded-circle mb-2" alt="Alternate Text" />
                <h4 id="header" class="fw-bold text-light">KVHAI</h4>
            </div>
            <div class="container-fluid mt-5 p-0">
                <nav class="nav admin_navlinks flex-column">
                    @RenderSection("sidebar", required: false)
                    
                </nav>
            </div>
        </div>

        <!-- MAIN CONTENT RIGHT -->
        <div class="center-form bg-light w-100">

            <!-- HEADER -->
            <div class="d-none  d-lg-flex p-2 bg-white shadow-sm">
                <div class="container d-none  d-lg-flex justify-content-between align-items-center">
                    <h5 class="fw-bold text-muted">@ViewBag.Title</h5>
                    <div class="d-flex align-items-center">

                        <!--NOTIFICATION-->
                        <div class="d-flex align-items-center p-2 notification_container d-flex">
                            <i class="" id="btn_notification">
                                <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24">
                                    <path fill="currentColor" d="M14.235 19c.865 0 1.322 1.024.745 1.668A4 4 0 0 1 12 22a4 4 0 0 1-2.98-1.332c-.552-.616-.158-1.579.634-1.661l.11-.006zM12 2c1.358 0 2.506.903 2.875 2.141l.046.171l.008.043a8.01 8.01 0 0 1 4.024 6.069l.028.287L19 11v2.931l.021.136a3 3 0 0 0 1.143 1.847l.167.117l.162.099c.86.487.56 1.766-.377 1.864L20 18H4c-1.028 0-1.387-1.364-.493-1.87a3 3 0 0 0 1.472-2.063L5 13.924l.001-2.97A8 8 0 0 1 8.822 4.5l.248-.146l.01-.043a3 3 0 0 1 2.562-2.29l.182-.017z" />
                                </svg>
                            </i>
                            <span class="notification_count">
                                @*@if (Model.NotificationStaff != null && Model.NotificationStaff.Count > 0)
                                {
                                    var text = Model.NotificationStaff.Count;
                                    @text
                                }
                                else
                                {
                                    var text = 0;
                                    @text
                                }*@
                            </span>
                            <div class="notification_body">
                                <div class="card text-center notification-card">
                                    <div class="card-header">
                                        <h6 class="card-title">Notification</h6>
                                    </div>
                                    <div class="card-body" id="notification_content">
                                        <div class="row">
                                            <div class="col-12 d-flex justify-content-between align-items-start notification-content">
                                                <div>
                                                    <p class="notification-message text-center">No new notification!</p>
                                                </div>
                                                @*<small class="notification-date">@item.Created_At</small>*@
                                                <small class="notification-date"></small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                            </div>
                        </div>
                        <div class="d-none d-lg-block stick me-2 ms-2"></div>
                        <div class=" d-flex align-items-center p-2">
                            @if (User.Identity.IsAuthenticated)
                            {
                                var residentID = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
                                var role = User.FindFirst(ClaimTypes.Role)?.Value;
                                var username = User.Identity.Name;

                                <span class="fw-bold">Hi, @username!</span> <!-- Display the username -->
                                <!-- You can also hide the ID or use it for some internal purposes -->
                                <input type="hidden" id="cookie_id" value="@residentID" />
                                <input type="hidden" id="cookie_name" value="@username" />
                                <input type="hidden" id="cookie_roles" value="@role" />
                            }
                            else
                            {
                                <p>Please log in.</p>
                            }
                            <div class="dropdown">
                                <button class="btn btn-sm dropdown-toggle caret-down" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                </button>
                                <ul class="dropdown-menu">
                                    <li>
                                        <div class="container-fluid d-flex justify-content-center">
                                            <a class="text-center text-decoration-none" id="btn_logout">Logout</a>
                                        </div>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- MOBILE NAV -->
            <div class="mobile_nav_container bg-dark text-white">
                <nav class="navbar navbar-expand-lg d-lg-none">
                    <div class="container-fluid p-0 flex-column">
                        <!-- Header Section -->
                        <div class="d-flex justify-content-between align-items-center w-100 p-3">
                            <div class="d-flex align-items-center">
                                <img src="/img/kvhai.png" class="kvhai-img me-2" alt="Alternate Text" />
                                <a class="navbar_header" href="#" id="header">KVHAI</a>
                            </div>
                            <button class="hamburger" id="btn_nav" type="button">
                                <span class="hamburger-line"></span>
                            </button>
                        </div>

                        <!-- Navigation Links -->
                        <div class="w-100" id="navbarNav">
                            <nav class="nav admin_navlinks d-flex justify-content-around">
                                @RenderSection("mobilenav", required: false)
                            </nav>
                        </div>

                        <!-- User Section -->
                        <div class="container-fluid">
                            <div class="user_section text-center mt-3 mb-2 w-100">
                                @if (User.Identity.IsAuthenticated)
                                {
                                    var residentID = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
                                    var role = User.FindFirst(ClaimTypes.Role)?.Value;
                                    var username = User.Identity.Name;
    
                                    <div class="username-display">
                                        <i class="fa-regular fa-user"></i>
                                        <span class="fw-bold ms-2">Hi, @username!</span>
                                    </div>
    
                                    <input type="hidden" id="cookie_id" value="@residentID" />
                                    <input type="hidden" id="cookie_name" value="@username" />
                                    <input type="hidden" id="cookie_roles" value="@role" />
                                    
                                    <!-- Logout Button -->
                                    <button class="btn btn-sm bg-white shadow-sm fw-bold pt-2 pb-2 ps-3 pe-3 mt-3" type="button" id="btn_logout">
                                        Logout
                                    </button>
                                }
                                else
                                {
                                    <p>Please log in.</p>
                                }
                            </div>
                        </div>
                    </div>
                </nav>
            </div>


            <!-- BODY CONTENT -->
            <div class="container-fluid p-4 content-wrapper">
                <div class="row">
                    <div class="col-12 mb-3">

                        @RenderBody()
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="~/lib/bootstrap/js/bootstrap.bundle.min.js" defer></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/editable-select/jquery-editable-select.js"></script>
    <script src="~/js/toastr.min.js" asp-append-version="true" defer></script>

    @await RenderSectionAsync("Scripts", required: false)
    <script src="~/js/notification.js"></script>
    <script src="~/js/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/js/signalrSetupConnection.js"></script>
    <script>
        $(document).ready(function () {
            const staffNotificationConnection = setupSignalRConnection("/staff/notification", "Notification Hub");

            $(document).on('click', '#notification_url', function () {
                var _notif_id = $('#notification_url').parent().data('notif');
                $.ajax({
                    type: "POST",
                    url: "/LoggedIn/UpdateNotificationRead",
                    data: { notification_id: _notif_id },
                    success: function () {
                        var currentUrl = window.location.pathname;
                        url = $('#notification_url').data('url');
                        if (currentUrl === url) {
                            GetNotificationResident();
                        }
                        else {
                            window.location.href = url;
                        }
                    }, error: function (xhr) {
                        toastr.error(xhr.responseText);
                    }
                });

            })

            function GetNotificationResident() {
                var res_id = $('#cookie_id').val();
                $.ajax({
                    type: "GET",
                    url: "/LoggedIn/GetNewNotification",
                    data: { resident_id: res_id },
                    success: function (response) {
                        //console.log(response);
                        var result = $(response).find('.notification_container').html();
                        //var result = $(response).find('.notification_body').html();
                        $('.notification_container').html(result);
                    },
                    error: function (xhr) {
                        toastr.error(xhr.responseText);
                    }
                });
            }

            function toggleNotifications() {
                const dropdown = document.getElementById('notification_dropdown');
                dropdown.style.display = dropdown.style.display === 'none' ? 'block' : 'none';
            }

            $(document).on('click', '#btn_logout', function () {
                $.ajax({
                    type: "POST",
                    url: "/AdminLogin/Logout",
                    success: function (response) {
                        toastr.info(response);
                        console.log(response);
                        setTimeout(function () {
                            window.location.href = '/kvhai/staff/login';
                        }, 3000);
                    }, error: function (xhr) {
                        toastr.error(xhr.responseText);
                    }
                });
            });

            $(document).on('click', '#btn_nav', function () {
                console.log($(this).parent().next());
                $(this).parent().next().fadeToggle();

                const userSection = $('.user_section');
                userSection.fadeToggle();
                // Add a red border for visibility (optional)
                //$('#navbarnav_links').show();
            })

            // $(document).on('click', '#btn_nav', function () {
            //     console.log($(this).parent().next());
            //     $(this).parent().next().fadeToggle();
            //     //$('#navbarnav_links').show();
            // })
            document.addEventListener('DOMContentLoaded', function () {
                const toggleBtn = document.querySelector('#toggle-menu');
                const topNavbar = document.querySelector('#top-navbar');

                if (toggleBtn && topNavbar) {
                    toggleBtn.addEventListener('click', function () {
                        topNavbar.classList.toggle('show');
                    });
                }
            });
        });

    </script>
</body>


</html>